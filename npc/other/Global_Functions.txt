//===== rAthena Script ======================================= 
//= Global Functions
//===== Description: ========================================= 
//= General script functions.
//===== Additional Comments: ================================= 
//= 1.0 Initial script. [Lupus] [kobra_k88]
//= Added F_ClearJobVar - on getting a new job it clears all Job Quest variables
//= Removed individual job check functions as they were redundant [kobra_k88]
//= 1.3 Added Job Change Function for Baby/Normal Classes
//= 1.3b a fix, due to const.txt change [Lupus]
//= 1.4 Added Is_Taekwon_Class: Taekwondo, Star Knight(Gladiator),Soul Linker [Lupus]
//= 1.5 Added clear of Bard Quest variables. 1.5a updated [Lupus]
//= 1.6 Added F_RandMes, F_SexMes, F_Hi, F_Bye functions [Lupus]
//=     Moved here useful function 'getJobName'
//= 1.7 Added "F_ItemName" function, added a great sample for "F_ItemName"
//= 1.8 Added Job Vars clear for Extended classes: TK,SL,SG [Lupus]
//= 1.9 Added "F_ClearGarbage" func that clears outdated, wasted variables [Lupus]
//= 1.91 Added "F_SaveQuestSkills","F_Load?Skills" functions [Lupus]
//= 2.0 Fixed F_Save/LoadQuestSkills functions. Had to split in into 2 vars [Lupus]
//= 2.01 Added $talk to F_ClearGarbage [Evera]
//= 2.02 Added $dtsglobalelig and $dts|(1<<6) to F_ClearGarbage [Evera]
//= 2.03 Added Gunslinger vars to F_ClearJobVar [Lupus]
//= 2.04 Added dtseligible 2 (becomes MISC_QUEST|128) to F_ClearGarbage [Evera]
//= 2.05 Book of Devil -> MISC_QUEST|256, clear other Niflheim garbage vars [Lupus]
//=     +more garbage clean
//= 2.06 Pass to Bio-Lab -> MISC_QUEST|512 [Lupus]
//= 2.07 Added TK_Q variable clear. 2.08 Added NINJ_Q variable clear [Lupus]
//= 2.09 Cleared F_ClearGarbage [Lupus]
//= 2.10 Added F_CheckMaxCount to check count of carrid items. [L0ne_w0lf]
//= 2.10a Removed function F_CheckMaxCount. Not needed. [L0ne_W0lf]
//= 2.11 Updated function Job_Change to jobchange based on Upper value. [Paradox924X]
//= 2.12 Added more unused vars to F_ClearGarbage [Lupus]
//= 2.13 Added more unused vars to F_ClearGarbage [Lupus]
//= 2.14 Added old novice variables to F_ClearGarbage. [L0ne_W0lf]
//= 2.15 Added no unused DTS variables to F_ClearGarbage. [L0ne_W0lf]
//= 2.16 Added F_GetWeaponType, and F_GetArmorType. [L0ne_W0lf]
//= 2.17 Renamed 'F_RandMes' to 'F_Rand'. [Euphy]
//= 2.18 Removed useless 'getJobName' function. [Euphy]
//= 2.2 Added "F_GetPlural", "F_InsertPlural", "F_InsertArticle", "F_InsertComma", "F_GetNumSuffix". [Euphy]
//=     Standardized descriptions, updated 'F_GetArmorType'.
//= 2.21 Added format string to "F_InsertPlural" and more checks to "F_GetPlural". [Euphy]
//= 2.22 Further improvements to "F_GetPlural". [Euphy]
//= 2.23 Completed article function and added "F_GetArticle". [Euphy]
//= 2.24 Added functions to check for equipment swap hacks. [Euphy]
//= 2.25 Added "F_CanOpenStorage" and "F_CanChangeJob". [secretdataz]
//= 2.26 Added "F_getpositionname". [Capuche]
//= 2.27 Added "F_GetPlatinumSkills". [mazvi]
//= 2.28 Added "close3". [Capuche]
//= 2.29 Updated "F_IsCharm" to support all latest enchants [Everade]
//============================================================ 

//////////////////////////////////////////////////////////////////////////////////
// Clears job quest variables.
// -- callfunc "F_ClearJobVar"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_ClearJobVar	{
	// Misc ---------------------------------
	set JBLVL,0;
	set FIRSTAID,0;
	set PLAYDEAD,0;
	set got_bandage,0;
	set got_novnametag,0;
	// First Class Jobs ---------------------
	set job_acolyte_q,0; set job_acolyte_q2,0;
	set job_archer_q,0;
	set job_magician_q,0;
	set job_merchant_q,0; set job_merchant_q2,0; set job_merchant_q3,0;
	set job_sword_q,0; set SWTEST, 0;
	set job_thief_q,0;
	// Super Novice
	set SUPNOV_Q,0;
	// 2-1 Jobs ------------------------------
	set ASSIN_Q,0; set ASSIN_Q2,0; set ASSIN_Q3,0;
	set BSMITH_Q,0; set BSMITH_Q2,0;
	set HNTR_Q,0; set HNTR_Q2,0;
	set KNIGHT_Q,0; set KNIGHT_Q2,0;
	set PRIEST_Q,0; set PRIEST_Q2,0; set PRIEST_Q3,0;
	set WIZ_Q,0; set WIZ_Q2,0;
	// 2-2 Jobs ------------------------------
	set ROGUE_Q,0; set ROGUE_Q2,0;
	set ALCH_Q,0; set ALCH_Q2,0;
	set CRUS_Q,0;
	set MONK_Q,0; set JOB_MONK_C,0;
	set SAGE_Q,0; set SAGE_Q2,0;
	set DANC_Q,0;
	set BARD_Q,0;
	// Extended Classes
	set TAEK_Q,0; set TK_Q,0;
	set STGL_Q,0;
	set SOUL_Q,0;
	set GUNS_Q,0;
	set NINJ_Q,0;
	return;
}


//////////////////////////////////////////////////////////////////////////////////
// Clears other unused variables.
// -- callfunc "F_ClearGarbage"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_ClearGarbage	{
	// Clear outdated global VARS
	//Clear TURTLE var if the Turtle Islans Quest is already done
		if(TURTLE==20) set MISC_QUEST,MISC_QUEST | 65536;
		if(MISC_QUEST & 65536) set TURTLE,0; //now clear the var if the quest is over
	//Clear previously saved Quest Skills (now it isn't used)
		set ADV_QSK,0;
		set ADV_QSK2,0;
	//Old Reset Skill Event used to use RES_SKILL var
		set RES_SKILL,0;
	//Here you put outdated variables from your outdated EVENTS
	//e.g. Is XMAS done? Add the EVENT var clearing code here.
	
	//due to bugs in BS quest:
	set wizard_m2,0;
	
	// Old Novice Ground Variables.
	set NEW_MES_FLAG0,0;
	set NEW_MES_FLAG1,0;
	set NEW_MES_FLAG2,0;
	set NEW_MES_FLAG3,0;
	set NEW_MES_FLAG4,0;
	set NEW_MES_FLAG5,0;
	set NEW_LVUP0,0;
	set NEW_LVUP1,0;
	set NEW_JOBLVUP,0;
	
	// Old DTS variables that are no longer used.
	set dtseligible,0;
	set MISC_QUEST,MISC_QUEST & ~128;
	
	return;
}


//////////////////////////////////////////////////////////////////////////////////
// Job change based on Upper value (normal, advanced, baby).
// -- callfunc "Job_Change",<Class value>;
// See Job_* constants in 'db/const.txt' for Class values.
//////////////////////////////////////////////////////////////////////////////////
function	script	Job_Change	{
	jobchange getarg(0),Upper;
//	logmes "CLASS CHANGE: " +strcharinfo(0)+ " become a "+jobname(Class);
	return;
}


//////////////////////////////////////////////////////////////////////////////////
// Functions used to spiff up dialoges [Lupus]
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// Returns a random argument.
// -- callfunc "F_Rand",arg0,arg1,...
// Example:
//    // You can use it to pick a random number from a list:
//    set @itemIDfromList, callfunc("F_Rand",1129,1222,1163,1357,1360,1522,1811,1410);
//////////////////////////////////////////////////////////////////////////////////
function	script	F_Rand	{
	return getarg(rand(getargcount()));
}


//////////////////////////////////////////////////////////////////////////////////
// Returns 1st argument if female, 2nd argument if male.
// -- callfunc "F_SexMes",argFemale,argMale
// Example:
//     mes callfunc("F_SexMes","What a beautiful lady!","What a handsome man!");
//////////////////////////////////////////////////////////////////////////////////
function	script	F_SexMes	{
	return getarg(Sex);
}


//////////////////////////////////////////////////////////////////////////////////
// Returns random "hello" and "goodbye" messages.
// -- callfunc "F_Hi"
// -- callfunc "F_Bye"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_Hi	{
	return callfunc("F_Rand","Hi!","Hello!","Good day!","How are you?","Hello there.");
}
function	script	F_Bye	{
	return callfunc("F_Rand","Bye. See you again.","Later.","Goodbye.","Good luck!","Have a nice day!","Byebye!!!");
}


//////////////////////////////////////////////////////////////////////////////////
// Returns expanded item name string.
// -- callfunc "F_ItemName",<item ID>,{<element>{,<VVS meter 0..3>{,<refine rate>}}}
//    Elements: 0=none, 1=Ice, 2=Earth, 3=Fire, 4=Wind
// Example:
//    // Displays "Show me your ^000090+5 VVS Fire Knife^000000..."
//    mes "Show me your "+callfunc("F_ItemName",1201,1,2,5)+"...";
//////////////////////////////////////////////////////////////////////////////////
function	script	F_ItemName	{
	if (getarg(3,0))
		set .@t$,"+"+getarg(3)+" ";
	switch (getarg(2,0)) {
		case 0: break;
		case 1: set .@t$,.@t$+"VS "; break;
		case 2: set .@t$,.@t$+"VVS "; break;
		case 3: set .@t$,.@t$+"VVVS "; break;
		default: set .@t$,.@t$+getarg(2)+"xVS "; break;
	}
	switch (getarg(1,0)) {
		case 0: break;
		case 1: set .@t$,.@t$+"Ice "; break;
		case 2: set .@t$,.@t$+"Earth "; break;
		case 3: set .@t$,.@t$+"Fire "; break;
		case 4: set .@t$,.@t$+"Wind "; break;
		default: set .@t$,.@t$+"Strange "; break;
	}
	return "^000090"+.@t$+getitemname(getarg(0))+"^000000";
}


//////////////////////////////////////////////////////////////////////////////////
// Stores learnt quest skills as variables ADV_QSK and ADV_QSK2.
// -- callfunc "F_SaveQuestSkills"
//
// Restores learnt 1st class quest skills.
// -- callfunc "F_Load1Skills"
//
// Restores learnt 2nd class quest skills.
// -- callfunc "F_Load2Skills"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_SaveQuestSkills	{
	set ADV_QSK,0; set ADV_QSK2,0;
	//1st classes quest skills
	for(set .@i, 0; .@i < 14; set .@i, .@i + 1){
		if(getskilllv(144+.@i)) set ADV_QSK,ADV_QSK|pow(2,.@i);
	}
	//2nd classes quest skills
	for(set .@i, 0; .@i < 19; set .@i, .@i + 1){
		if(getskilllv(1001+.@i)) set ADV_QSK2,ADV_QSK2|pow(2,.@i);
	}
	return;
}
function	script	F_Load1Skills	{
	for(set .@i, 0; .@i < 14; set .@i, .@i + 1){
		if(ADV_QSK|pow(2,.@i) == ADV_QSK) skill 144+.@i,1,0;
	}
	set ADV_QSK,0; //Clear var
	return;
}
function	script	F_Load2Skills	{
	for(set .@i, 0; .@i < 19; set .@i, .@i + 1){
		if(ADV_QSK2|pow(2,.@i) == ADV_QSK2) skill 1001+.@i,1,0;
	}
	set ADV_QSK2,0; //Clear var
	return;
}


//////////////////////////////////////////////////////////////////////////////////
// Returns weapon type, based on view.
// -- callfunc "F_GetWeaponType",<weapon ID>
//
// Returns equipment type, based on equip location.
// -- callfunc "F_GetArmorType",<item ID>
//////////////////////////////////////////////////////////////////////////////////
function	script	F_GetWeaponType	{
	switch(getiteminfo(getarg(0), ITEMINFO_VIEW)) {
		case 1: return "Dagger"; break;
		case 2: return "One-handed Sword"; break;
		case 3: return "Two-handed Sword"; break;
		case 4: return "One-handed Spear"; break;
		case 5: return "Two-handed Spear"; break;
		case 6: return "One-handed Axe"; break;
		case 7: return "Two-handed Axe"; break;
		case 8: return "Mace"; break;
		//case 9: return "Unused"; break;
		case 10: return "Staff"; break;
		case 11: return "Bow"; break;
		case 12: return "Knuckle"; break;
		case 13: return "Instrument"; break;
		case 14: return "Whip"; break;
		case 15: return "Book"; break;
		case 16: return "Katar"; break;
		case 17: return "Revolver"; break;
		case 18: return "Rifle"; break;
		case 19: return "Gatling gun"; break;
		case 20: return "Shotgun"; break;
		case 21: return "Grenade Launcher"; break;
		case 22: return "Shuriken"; break;
		default: return "Unknown Weapon"; break;
	}
	end;
}
function	script	F_GetArmorType	{
	switch(getiteminfo(getarg(0), ITEMINFO_LOCATIONS)) {
		case EQP_HEAD_LOW:
			return "Lower Headgear";
		case EQP_HAND_R:
			return callfunc("F_GetWeaponType",getarg(0));
		case EQP_GARMENT:
			return "Garment";
		case EQP_ACC_L:
		case EQP_ACC_R:
		case EQP_ACC_RL:
			return "Accessory";
		case EQP_ARMOR:
			return "Armor";
		case EQP_HAND_L:
			return "Shield";
		case EQP_SHOES:
			return "Shoes";
		case EQP_HEAD_TOP:
			return "Upper Headgear";
		case EQP_HEAD_MID:
			return "Middle Headgear";
		case EQP_COSTUME_HEAD_TOP:
			return "Costume Upper Headgear";
		case EQP_COSTUME_HEAD_MID:
			return "Costume Midle Headgear";
		case EQP_COSTUME_HEAD_LOW:
			return "Costume Lower Headgear";
		case EQP_COSTUME_GARMENT:
			return "Costume Garment";
		case EQP_AMMO:
			return "Ammo";
		case EQP_SHADOW_ARMOR:
			return "Shadow Armor";
		case EQP_SHADOW_WEAPON:
			return "Shadow Weapon";
		case EQP_SHADOW_SHIELD:
			return "Shadow Shield";
		case EQP_SHADOW_SHOES:
			return "Shadow Shoes";
		case EQP_SHADOW_ACC_R:
		case EQP_SHADOW_ACC_L:
		case EQP_SHADOW_ACC_RL:
			return "Shadow Accessory";
		default:
			return "Unknown Equip";
	}
}


//////////////////////////////////////////////////////////////////////////////////
// Returns time remaining in a readable format.
// The argument is subtracted from UNIX epoch time, or 'gettimetick(2)'.
// -- callfunc "Time2Str",<tick in UNIX epoch time>
// Example:
//    // Displays "Time left: 1 day, 1 hour, 8 minutes, 20 seconds"
//    set .@Timer, gettimetick(2) + 90500;
//    mes "Time left: " + callfunc("Time2Str",.@Timer);
//////////////////////////////////////////////////////////////////////////////////
function	script	Time2Str	{
	set .@Time_Left, getarg(0) - gettimetick(2);
	
	set .@Days, .@Time_Left / 86400;
	set .@Time_Left, .@Time_Left - (.@Days * 86400);
	set .@Hours, .@Time_Left / 3600;
	set .@Time_Left, .@Time_Left - (.@Hours * 3600);
	set .@Minutes, .@Time_Left / 60;
	set .@Time_Left, .@Time_Left - (.@Minutes * 60);
	
	set .@Time$, "";
	if( .@Days > 1 )
		set .@Time$, .@Time$ + .@Days + " days, ";
	else if( .@Days > 0 )
		set .@Time$, .@Time$ + .@Days + " day, ";

	if( .@Hours > 1 )
		set .@Time$, .@Time$ + .@Hours + " hours, ";
	else if( .@Hours > 0 )
		set .@Time$, .@Time$ + .@Hours + " hour, ";

	if( .@Minutes > 1 )
		set .@Time$, .@Time$ + .@Minutes + " minutes, ";
	else if( .@Minutes > 0 )
		set .@Time$, .@Time$ + .@Minutes + " minute, ";

	if( .@Time_Left > 1 || .@Time_Left == 0 )
		set .@Time$, .@Time$ + .@Time_Left + " seconds";
	else if( .@Time_Left == 1 )
		set .@Time$, .@Time$ + .@Time_Left + " second";
	
	return .@Time$;
}


//////////////////////////////////////////////////////////////////////////////////
// Checks if equipment has been swapped (i.e. via hacks).
// The function checks the current equipment at a position against the supplied
// values, and logs any mismatches.
// Returns 0 if match, 1 if mismatch.
// -- callfunc "F_IsEquipIDHack",<equip position>,<equip ID>
// -- callfunc "F_IsEquipRefineHack",<equip position>,<refine>
// -- callfunc "F_IsEquipCardHack",<equip position>,<card 0>,<card 1>,<card 2>,<card 3>
//////////////////////////////////////////////////////////////////////////////////
function	script	F_IsEquipIDHack	{
	set .@id_chk, getequipid(getarg(0));
	set .@id, getarg(1);
	if (.@id != .@id_chk) {
		logmes "Hack: Tried to swap equip " + getitemname(.@id) + " for " + getitemname(.@id_chk) + ".";
		return 1;
	}
	return 0;
}
function	script	F_IsEquipRefineHack	{
	set .@refine_chk, getequiprefinerycnt(getarg(0));
	set .@refine, getarg(1);
	if (.@refine != .@refine_chk) {
		logmes "Hack: Tried to swap equip with refine +" + .@refine + " for +" + .@refine_chk + ".";
		return 1;
	}
	return 0;
}
function	script	F_IsEquipCardHack	{
	set .@pos, getarg(0);
	for (set .@i,0; .@i < 4; set .@i, .@i+1) {
		set .@card, getarg(.@i + 1);
		set .@card_chk, getequipcardid(.@pos, .@i);
		if (.@card != .@card_chk) {
			logmes "Hack: Tried to swap card " + getitemname(.@card) + " for " + getitemname(.@card_chk) + ".";
			return 1;
		}
	}
	return 0;
}


//////////////////////////////////////////////////////////////////////////////////
// Functions for text manipulation [Euphy]
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
// Returns the plural of a noun - works in most cases, but not for everything!
// -- callfunc "F_GetPlural","<noun>"{,<0:normal/1:uppercase>}
// Examples:
//    callfunc("F_GetPlural","dog")            // returns "dogs"
//    callfunc("F_GetPlural","fox",1)          // returns "FOXES"
//    callfunc("F_GetPlural","knife")          // returns "knives"
//    callfunc("F_GetPlural","Piece of Cake")  // returns "Pieces of Cake"
//
// Returns the plural of a noun if the given number is not 1.
// -- callfunc "F_InsertPlural",<number>,"<noun>"{,<0:normal/1:uppercase>{,"<format string>"}}
// Format string uses sprintf(), and MUST contain %d (arg0) and %s (arg1), in that order.
// Examples:
//    callfunc("F_InsertPlural",1,"dog")    // returns "1 dog"
//    callfunc("F_InsertPlural",3,"fox",1)  // returns "3 FOXES"
//    // returns "^FF00005^000000 knives"
//    callfunc("F_InsertPlural",5,"knife",0,"^FF0000%d^000000 %s")
//////////////////////////////////////////////////////////////////////////////////
function	script	F_GetPlural	{
	set .@str$, getarg(0);

	if (countstr(.@str$," ")) {  // multiple words
		explode(.@tmp$,.@str$," ");
		set .@size, getarraysize(.@tmp$);

		// if format is "... of|in|on ...", pluralize preceding word; else pluralize last word
		if (compare(.@str$," of ") || compare(.@str$," in ") || compare(.@str$," on ")) {
			for (set .@i,1; .@i<.@size; set .@i,.@i+1) {
				if (getstrlen(.@tmp$[.@i]) == 2 && compare("of|in|on",.@tmp$[.@i]))
					break;
				set .@index, .@index + 1;
			}
		} else
			set .@index, .@size - 1;

		set .@str$, .@tmp$[.@index];
		set .@tmp$[.@index],"%s";
		set .@format$, implode(.@tmp$," ");
	} else
		set .@format$, "%s";

	set .@strlen, getstrlen(.@str$);
	if (.@strlen < 3)  // prevent errors
		return ((getarg(1,0)) ? strtoupper(sprintf(.@format$,.@str$)) : sprintf(.@format$,.@str$));

	setarray .@suffix$[0], charat(.@str$,.@strlen - 1), substr(.@str$,.@strlen - 2,.@strlen - 1);
	if (!compare("abcdefghijklmnopqrstuvwxyz",.@suffix$[0])) {  // last character is not a letter
		set .@result$, .@str$;
	}

	// common exceptions --> singular form == plural form
	else if (compare("fish|glasses|sunglasses|clothes|boots|shoes|greaves|sandals|wings|ears",.@str$)) {
		set .@result$, .@str$;
	}

	// ends in -s, -x, -z, -ch, -sh --> add -es
	else if (.@suffix$[0] == "s" || .@suffix$[0] == "x" || .@suffix$[0] == "z" ||
	    .@suffix$[1] == "ch" || .@suffix$[1] == "sh") {
		set .@result$, .@str$ + "es";
	}

	// ends in -f, -fe --> remove -f, -fe --> add -ves
	else if ((.@suffix$[0] == "f" || .@suffix$[1] == "fe") && .@suffix$[1] != "ff") {
		if (compare("belief|cliff|chief|dwarf|grief|gulf|proof|roof",.@str$))
			set .@result$, .@str$ + "s";  // exceptions --> add -s
		else
			set .@result$, substr(.@str$,0,.@strlen - 2 - (.@suffix$[1] == "fe")) + "ves";
	}
	
	// ends in consonant + -y --> remove -y --> add -ies
	else if (.@suffix$[0] == "y" && !compare("aeiou",charat(.@suffix$[1],0))) {
		set .@result$, delchar(.@str$,.@strlen - 1) + "ies";
	}

	// ends in -o --> exceptions --> add -es
	else if (.@suffix$[0] == "o" &&
	         compare("buffalo|domino|echo|grotto|halo|hero|mango|mosquito|potato|tomato|tornado|torpedo|veto|volcano",.@str$)) {
		set .@result$, .@str$ + "es";
	}

	// default --> add -s
	else {
		set .@result$, .@str$ + "s";
	}

	return ((getarg(1,0)) ? strtoupper(sprintf(.@format$,.@result$)) : sprintf(.@format$,.@result$));
}
function	script	F_InsertPlural	{
	return sprintf(getarg(3,"%d %s"), getarg(0), ((getarg(0) == 1) ? getarg(1) : callfunc("F_GetPlural",getarg(1),getarg(2,0))));
}


//////////////////////////////////////////////////////////////////////////////////
// Returns 'a' or 'an' based on a word.
// -- callfunc "F_GetArticle","<noun>";
// Examples:
//    callfunc("F_GetArticle","Apple")  // returns "an"
//    callfunc("F_GetArticle","dog")    // returns "a"
//
// Returns 'a' or 'an' based on a word, followed by the word.
// -- callfunc "F_InsertArticle","<word>"{,<0:lowercase a/1:uppercase A>}
// Examples:
//    callfunc("F_InsertArticle","Apple")  // returns "an Apple"
//    callfunc("F_InsertArticle","dog",1)  // returns "A dog"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_GetArticle	{
	set .@str$, strtolower(getarg(0));

	// not a word
	if (!charisalpha(.@str$,0))
		return "a";

	// 1-letter words
	if (getstrlen(.@str$) == 1) {
		if (strpos("aefhilmnorsx",.@str$) > -1)
			return "an";
		else
			return "a";
	}

	// special cases
	if (preg_match("(euler|hour(?!i)|heir|honest|hono)",.@str$))
		return "an";

	// consonants
	if (preg_match("^[^aeiouy]",.@str$))
		return "a";

	// special vowel forms
	if (preg_match("^e[uw]",.@str$) || preg_match("^onc?e\b",.@str$) || preg_match("^uni([^nmd]|mo)",.@str$) || preg_match("^u[bcfhjkqrst][aeiou]",.@str$))
		return "a";
	if (preg_match("^ut[th]",.@str$))
		return "an";

	// special capitals (rare)
	//if (preg_match("^U[NK][AIEO]?",getarg(0)))
	//	return "a";

	// vowels
	if (preg_match("^[aeiou]",.@str$))
		return "an";

	// y... (rare)
	//if (preg_match("^(y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt))",.@str$))
	//	return "an";

	return "a";
}
function	script	F_InsertArticle	{
	set .@article$, callfunc("F_GetArticle",getarg(0));
	return sprintf("%s %s", ((getarg(1,0)) ? replacestr(.@article$,"a","A") : .@article$), getarg(0));
}


//////////////////////////////////////////////////////////////////////////////////
// Returns a number with commas between every three digits.
// -- callfunc "F_InsertComma",<number>
// Examples:
//    callfunc("F_InsertComma",7777777)  // returns "7,777,777"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_InsertComma	{
	set .@str$, getarg(0);
	for (set .@i,getstrlen(.@str$)-3; .@i>0; set .@i,.@i-3)
		set .@str$, insertchar(.@str$,",",.@i);
	return .@str$;
}


//////////////////////////////////////////////////////////////////////////////////
// Returns a number with a '-st', '-nd', '-rd', or '-th' suffix.
// -- callfunc "F_GetNumSuffix",<number>
// Examples:
//    callfunc("F_GetNumSuffix",1)   // returns "1st"
//    callfunc("F_GetNumSuffix",11)  // returns "11th"
//    callfunc("F_GetNumSuffix",32)  // returns "32nd"
//////////////////////////////////////////////////////////////////////////////////
function	script	F_GetNumSuffix	{
	set .@n, getarg(0);
	set .@mod, .@n % 10;
	if      (.@mod == 1 && .@n != 11) return .@n+"st";
	else if (.@mod == 2 && .@n != 12) return .@n+"nd";
	else if (.@mod == 3 && .@n != 13) return .@n+"rd";
	else return .@n+"th";
}

//////////////////////////////////////////////////////////////////////////////////
// Indicate if attached player can open storage
//////////////////////////////////////////////////////////////////////////////////
function	script	F_CanOpenStorage	{
	return (!basicskillcheck() || !(getskilllv("NV_BASIC") < 6 && getskilllv("SU_BASIC_SKILL") < 1));
}

//////////////////////////////////////////////////////////////////////////////////
// Indicate if attached player can advance to class 1 by checking
// basic skill level 9.
//////////////////////////////////////////////////////////////////////////////////
function	script	F_CanChangeJob	{
	return (!basicskillcheck() || getskilllv("NV_BASIC") > 8);
}

//////////////////////////////////////////////////////////////////////////////////
// Return the position name of the EQI_* equipment slot.
//////////////////////////////////////////////////////////////////////////////////
function	script	F_getpositionname	{
	switch( getarg(0,999) ) {
		case EQI_ACC_L:		return "Accessory 1";
		case EQI_ACC_R:		return "Accessory 2";
		case EQI_SHOES:		return "Shoes";
		case EQI_GARMENT:	return "Robe";
		case EQI_HEAD_LOW:	return "Head 3";
		case EQI_HEAD_MID:	return "Head 2";
		case EQI_HEAD_TOP:	return "Head";
		case EQI_ARMOR:		return "Body";
		case EQI_HAND_L:	return "Left hand";
		case EQI_HAND_R:	return "Right hand";
		case EQI_COSTUME_HEAD_TOP:	return "Upper Costume Headgear";
		case EQI_COSTUME_HEAD_MID:	return "Middle Costume Headgear";
		case EQI_COSTUME_HEAD_LOW:	return "Lower Costume Headgear";
		case EQI_COSTUME_GARMENT:	return "Costume Garment";
		case EQI_AMMO:			return "Arrow/Ammunition";
		case EQI_SHADOW_ARMOR:	return "Shadow Armor";
		case EQI_SHADOW_WEAPON:	return "Shadow Weapon";
		case EQI_SHADOW_SHIELD:	return "Shadow Shield";
		case EQI_SHADOW_SHOES:	return "Shadow Shoes";
		case EQI_SHADOW_ACC_R:	return "Shadow Accessory 2";
		case EQI_SHADOW_ACC_L:	return "Shadow Accessory 1";
		default:
			return "Unknown";
	}
}

//////////////////////////////////////////////////////////////////////////////////
// Gives attached player their Platinum Skill based on their class.
//////////////////////////////////////////////////////////////////////////////////
function	script	F_GetPlatinumSkills	{
	skill "NV_FIRSTAID",1,SKILL_PERM;
	skill "NV_AUTOATTACK",1,SKILL_PERM;
	switch (BaseClass) {
	case Job_Novice:
		if (Class != Job_Super_Novice)
			skill "NV_TRICKDEAD",1,SKILL_PERM;
		break;
	case Job_Swordman:
		skill "SM_MOVINGRECOVERY",1,SKILL_PERM;
		skill "SM_FATALBLOW",1,SKILL_PERM;
		skill "SM_AUTOBERSERK",1,SKILL_PERM;
		break;
	case Job_Mage:
		skill "MG_ENERGYCOAT",1,SKILL_PERM;
		break;
	case Job_Archer:
		skill "AC_MAKINGARROW",1,SKILL_PERM;
		skill "AC_CHARGEARROW",1,SKILL_PERM;
		break;
	case Job_Acolyte:
		skill "AL_HOLYLIGHT",1,SKILL_PERM;
		break;
	case Job_Merchant:
		skill "MC_CARTREVOLUTION",1,SKILL_PERM;
		skill "MC_CHANGECART",1,SKILL_PERM;
		skill "MC_LOUD",1,SKILL_PERM;
		if(PACKETVER >= 20150826)
			skill "MC_CARTDECORATE",1,SKILL_PERM;
		break;
	case Job_Thief:
		skill "TF_SPRINKLESAND",1,SKILL_PERM;
		skill "TF_BACKSLIDING",1,SKILL_PERM;
		skill "TF_PICKSTONE",1,SKILL_PERM;
		skill "TF_THROWSTONE",1,SKILL_PERM;
		break;
	default:
		break;
	}
	switch (BaseJob) {
	case Job_Knight:
		skill "KN_CHARGEATK",1,SKILL_PERM;
		break;
	case Job_Priest:
		skill "PR_REDEMPTIO",1,SKILL_PERM;
		break;
	case Job_Wizard:
		skill "WZ_SIGHTBLASTER",1,SKILL_PERM;
		break;
	case Job_Blacksmith:
		skill "BS_UNFAIRLYTRICK",1,SKILL_PERM;
		skill "BS_GREED",1,SKILL_PERM;
		break;
	case Job_Hunter:
		skill "HT_PHANTASMIC",1,SKILL_PERM;
		break;
	case Job_Assassin:
		skill "AS_SONICACCEL",1,SKILL_PERM;
		skill "AS_VENOMKNIFE",1,SKILL_PERM;
		break;
	case Job_Crusader:
		skill "CR_SHRINK",1,SKILL_PERM;
		break;
	case Job_Monk:
		skill "MO_KITRANSLATION",1,SKILL_PERM;
		skill "MO_BALKYOUNG",1,SKILL_PERM;
		break;
	case Job_Sage:
		skill "SA_CREATECON",1,SKILL_PERM;
		skill "SA_ELEMENTWATER",1,SKILL_PERM;
		skill "SA_ELEMENTGROUND",1,SKILL_PERM;
		skill "SA_ELEMENTFIRE",1,SKILL_PERM;
		skill "SA_ELEMENTWIND",1,SKILL_PERM;
		break;
	case Job_Rogue:
		skill "RG_CLOSECONFINE",1,SKILL_PERM;
		break;
	case Job_Alchemist:
		skill "AM_BIOETHICS",1,SKILL_PERM;
		break;
	case Job_Bard:
		skill "BA_PANGVOICE",1,SKILL_PERM;
		break;
	case Job_Dancer:
		skill "DC_WINKCHARM",1,SKILL_PERM;
		break;
	default:
		break;
	}
	return;
}

//////////////////////////////////////////////////////////////////////////////////
// Shortcut : close button and clear cutin.
//////////////////////////////////////////////////////////////////////////////////
function	script	close3	{
	close2;
	cutin "",255;
	end;
}

//////////////////////////////////////////////////////////////////////////////////
// Return true if the card is a charm (enchant card), false otherwise.
//////////////////////////////////////////////////////////////////////////////////
function	script	F_IsCharm	{
	.@id = getarg(0);
	return ((.@id >= 4700 && .@id <= 4999) || (.@id >= 29000 && .@id <= 29689) || (.@id >= 310000 && .@id <= 311091 ));
}

function	script	getitemname2	{
	freeloop true;
	deletearray @itemname2_info$;
	.@id = getarg(0);
	.@type = getiteminfo( .@id, 2 );
	.@refine = getarg(2);
	.@card[0] = getarg(4);
	.@card[1] = getarg(5);
	.@card[2] = getarg(6);
	.@card[3] = getarg(7);
	.@bound = getarg(8,0);
	.@ref$ = ( .@refine )? "+"+ .@refine +" " : "" ; // I think no need refinement check for type 4 or 5, the source automatically convert refined etc items into no refinement
	.@slots$ = ( .@slot = getitemslots( .@id ) )? " ["+ .@slot +"]" : "" ;

	if ( .@bound ) {
		@itemname2_info$[0] = "^CCAA00"; // this condition always get overwritten ...
		if ( .@bound == 1 ) @itemname2_info$[5] = "Account";
		else if ( .@bound == 2 ) @itemname2_info$[5] = "Guild";
		else if ( .@bound == 3 ) @itemname2_info$[5] = "Party";
		else if ( .@bound == 4 ) @itemname2_info$[5] = "Character";
	}

	if ( .@type != IT_WEAPON && .@type != IT_ARMOR && .@card[0] != 254 ) { // non-equipable item that isn't signed
		.@pid = .@card[1] + ( ( .@card[1] >= 0 )? 0 : 1 << 16 ) + .@card[2] * ( 1 << 16 );
		@itemname2_info$[1] = ( .@pid )? .@pid : "";
		.@return$ = getitemname( .@id );
	}
	else if ( ( .@type == IT_WEAPON || .@type == IT_ARMOR ) && !.@card[0] && !.@card[1] && !.@card[2] && !.@card[3] ) // equipment with no card, for reduce gotocount
		.@return$ = .@ref$ + getitemname( .@id ) + .@slots$;
	else if ( ( .@type == IT_WEAPON || .@type == IT_ARMOR ) && ( .@card[0] || .@card[1] || .@card[2] || .@card[3] ) && .@card[0] != 254 && .@card[0] != 255 ) { // equipment that has cards, but not a signed item
		.@string$ = "#"+ .@card[0] +"##"+ .@card[1] +"##"+ .@card[2] +"##"+ .@card[3] +"#";
		.@i = 0;
		while ( .@i < 4 ) {
			if ( !compare( .@counted$, "#"+ .@card[.@i] +"#" ) ) {
				.@cnt[.@i] = countstr( .@string$, "#"+ .@card[.@i] +"#" );
				.@counted$ = .@counted$ +"#"+ .@card[.@i] +"#";
			}
			if ( getstrlen( $@cardprefix$[.@card[.@i]] ) && .@cnt[.@i] ) {
				if ( .@cnt[.@i] == 2 )
					.@cnt$[.@i] = "Double";
				else if ( .@cnt[.@i] == 3 )
					.@cnt$[.@i] = "Triple";
				else if ( .@cnt[.@i] == 4 )
					.@cnt$[.@i] = "Quadruple";
				if ( !compare( $@cardprefix$[.@card[.@i]], "of " ) )
					.@prefix$ = .@prefix$ + .@cnt$[.@i] +( ( getstrlen(.@cnt$[.@i]) )? " ": "" )+ $@cardprefix$[.@card[.@i]] +" ";
				else
					.@postfix$ = .@postfix$ +" "+ $@cardprefix$[.@card[.@i]] +( ( getstrlen(.@cnt$[.@i]) )? " ": "" )+ .@cnt$[.@i];
			}
			.@enchant = .@enchant + ( .@card[.@i] && .@i >= .@slot && ( .@card[.@i] /100 ) != 47 && ( .@card[.@i] /100 ) != 48 );
			.@i++;
		}
		if ( .@enchant == 1 )
			@itemname2_info$[0] = "^66CC00";
		else if ( .@enchant == 2 )
			@itemname2_info$[0] = "^0066CC";
		else if ( .@enchant == 3 )
			@itemname2_info$[0] = "^CC6600";
		else if ( .@enchant == 4 )
			@itemname2_info$[0] = "^CC44CC";
		.@return$ = .@ref$ + .@prefix$ + getitemname( .@id ) + .@postfix$ + .@slots$;
	}
	else if ( .@card[0] == 254 || .@card[0] == 255 ) { // signed items
		.@cid = @itemname2_info$[1] = .@card[2] + ( ( .@card[2] >= 0 )? 0 : 1 << 16 ) + .@card[3] * ( 1 << 16 );
		if ( !query_sql("select name from `char` where char_id = "+ .@cid, .@name$) )
			.@name$ = "Unknown";
		.@sc = .@card[1] / 10;
		if ( .@sc == 128 ) {
			.@sc$ = "Very Strong ";
			@itemname2_info$[3] = "1";
		}
		else if ( .@sc == 256 ) {
			.@sc$ = "Very Very Strong ";
			@itemname2_info$[3] = "2";
		}
		else if ( .@sc == 384 ) {
			.@sc$ = "Very Very Very Strong ";
			@itemname2_info$[3] = "3";
		}
		.@ele = .@card[1] % 10;
		if ( .@ele == 1 )
			.@ele$ = @itemname2_info$[4] = "Ice ";
		else if ( .@ele == 2 )
			.@ele$ = @itemname2_info$[4] = "Earth ";
		else if ( .@ele == 3 )
			.@ele$ = @itemname2_info$[4] = "Fire ";
		else if ( .@ele == 4 )
			.@ele$ = @itemname2_info$[4] = "Wind ";
		.@return$ = .@ref$ + .@sc$ + .@name$ +"'s "+ .@ele$ + getitemname( .@id );
	}

	if ( !getarg(1) ) { // unidentified
		if ( .@type == IT_ARMOR ) {
			@itemname2_info$[0] = "^999999";
			@itemname2_info$[2] = .@return$;
			.@loc = getiteminfo( .@id, 5 );
			.@return$ = // TODO : where to get this stuff already ??
				( .@loc & 769 )?
					// from top to bottom : Signpost, Ear Muff, Poo Poo Hat, Funeral Hat, Antenna, Egg Shell, Cap, Sheep Hat, Red Nose, Moustache, Bandana, Flower, Ribbon, Headband, Masquerade, Mask, Glasses, Hairband, Accessory, Else Hat
					( .@id == 2272 )? "Signpost" :
					( .@id == 2283 )? "Ear Muffs" :
					( .@id == 2289 )? "Poo Poo Hat" :
					( .@id == 2290 )? "Funeral Hat" :
					( .@id == 5011 )? "Antenna" :
					( .@id == 5015 )? "Egg Shell" :
					( .@id == 5370 )? "Cap" :
					( .@id == 5133 )? "Sheep Hat" :
					( .@id == 2262 || .@id == 5204 )? "Red Nose" :
					( .@id == 5373 || .@id == 5374 || .@id == 5375 )? "Helm" :
					( .@id == 2237 || .@id == 2238 || .@id == 2240 || .@id == 2241 )? "Moustache" :
					( .@id == 2211 || .@id == 2287 || .@id == 5350 || .@id == 5661 )? "Bandana" :
					( .@id == 2207 || .@id == 2253 || .@id == 712 || .@id == 10009 || .@id == 5351 || .@id == 11712 )? "Flower" :
					( .@id == 5220 || .@id == 5221 || .@id == 5315 || .@id == 2715 || .@id == 5382 || .@id == 5600 )? "Ribbon" :
					( .@id == 5210 || .@id == 5212 || .@id == 5213 || .@id == 5215 || .@id == 5216 || .@id == 5218 )? "Headband" :
					( .@id == 2278 || .@id == 2281 || .@id == 2297 || .@id == 5086 || .@id == 5087 || .@id == 5088 || .@id == 5089 || .@id == 5090 || .@id == 5121 || .@id == 5130 || .@id == 5143 || .@id == 5176 || .@id == 5309 || .@id == 5314 || .@id == 5326 || .@id == 5332 || .@id == 5397 || .@id == 5566 || .@id == 5475 )? "Masquerade" :
					( .@id == 2218 || .@id == 2219 || .@id == 2265 || .@id == 2266 || .@id == 5004 || .@id == 2288 || .@id == 2292 || .@id == 5005 || .@id == 10002 || .@id == 5054 || .@id == 5096 || .@id == 5098 || .@id == 5272 || .@id == 5294 || .@id == 5461 || .@id == 5485 || .@id == 5565 || .@id == 5482 || .@id == 5483 || .@id == 5577 )? "Mask" :
					( .@id == 2201 || .@id == 2202 || .@id == 2203 || .@id == 2204 || .@id == 2205 || .@id == 2212 || .@id == 2239 || .@id == 2242 || .@id == 2243 || .@id == 2260 || .@id == 2263 || .@id == 2271 || .@id == 2276 || .@id == 2291 || .@id == 2296 || .@id == 5006 || .@id == 10014 || .@id == 5288 || .@id == 5325 || .@id == 5401 )? "Glasses" :
					( .@id == 2210 || .@id == 2213 || .@id == 2214 || .@id == 2215 || .@id == 2250 || .@id == 2254 || .@id == 2255 || .@id == 2273 || .@id == 2274 || .@id == 2275 || .@id == 2282 || .@id == 2295 || .@id == 5010 || .@id == 5057 || .@id == 5070 || .@id == 5071 || .@id == 5082 || .@id == 5101 || .@id == 5104 || .@id == 5118 || .@id == 5125 || .@id == 5207 || .@id == 5256 || .@id == 5257 || .@id == 5269 || .@id == 5286 || .@id == 5803 || .@id == 5301 || .@id == 5310 || .@id == 5320 || .@id == 5321 || .@id == 5329 || .@id == 5357 || .@id == 5376 || .@id == 5411 || .@id == 5436 || .@id == 5438 || .@id == 5439 || .@id == 5440 || .@id == 5441 || .@id == 5442 || .@id == 5547 || .@id == 5553 || .@id == 5360 || .@id == 5585 || .@id == 5678 || .@id == 5470 )? "Hairband" :
					( .@id == 2208 || .@id == 2209 || .@id == 2267 || .@id == 2268 || .@id == 2269 || .@id == 2270 || .@id == 2279 || .@id == 2286 || .@id == 2294 || .@id == 2298 || .@id == 2601 || .@id == 2602 || .@id == 2603 || .@id == 2604 || .@id == 2605 || .@id == 2607 || .@id == 2608 || .@id == 2609 || .@id == 2610 || .@id == 2611 || .@id == 2612 || .@id == 2613 || .@id == 2614 || .@id == 2615 || .@id == 2616 || .@id == 2617 || .@id == 2618 || .@id == 2619 || .@id == 2620 || .@id == 5008 || .@id == 5013 || .@id == 2621 || .@id == 2622 || .@id == 2623 || .@id == 2624 || .@id == 2625 || .@id == 2626 || .@id == 2627 || .@id == 2628 || .@id == 10004 || .@id == 10005 || .@id == 10007 || .@id == 10011 || .@id == 10013 || .@id == 10015 || .@id == 10016 || .@id == 2629 || .@id == 2630 || .@id == 5061 || .@id == 5063 || .@id == 5064 || .@id == 5068 || .@id == 5074 || .@id == 5077 || .@id == 5079 || .@id == 5083 || .@id == 5085 || .@id == 2638 || .@id == 2639 || .@id == 2641 || .@id == 5102 || .@id == 2642 || .@id == 2643 || .@id == 2645 || .@id == 2648 || .@id == 2649 || .@id == 2650 || .@id == 2651 || .@id == 2652 || .@id == 2653 || .@id == 2654 || .@id == 2655 || .@id == 2656 || .@id == 5107 || .@id == 5110 || .@id == 5113 || .@id == 5117 || .@id == 2659 || .@id == 2660 || .@id == 2661 || .@id == 2662 || .@id == 2663 || .@id == 2664 || .@id == 2667 || .@id == 5139 || .@id == 5140 || .@id == 2668 || .@id == 5153 || .@id == 2670 || .@id == 5154 || .@id == 5155 || .@id == 5156 || .@id == 2671 || .@id == 5175 || .@id == 2672 || .@id == 2673 || .@id == 5191 || .@id == 5192 || .@id == 5193 || .@id == 5194 || .@id == 5195 || .@id == 5196 || .@id == 5197 || .@id == 2674 || .@id == 2675 || .@id == 5206 || .@id == 2676 || .@id == 5801 || .@id == 5277 || .@id == 5278 || .@id == 2701 || .@id == 2702 || .@id == 2703 || .@id == 2686 || .@id == 2687 || .@id == 2688 || .@id == 2689 || .@id == 2690 || .@id == 2691 || .@id == 2692 || .@id == 2693 || .@id == 2694 || .@id == 2695 || .@id == 2696 || .@id == 2697 || .@id == 2698 || .@id == 2699 || .@id == 2704 || .@id == 2705 || .@id == 5285 || .@id == 5305 || .@id == 5804 || .@id == 5244 || .@id == 5245 || .@id == 5248 || .@id == 5249 || .@id == 5250 || .@id == 5251 || .@id == 5311 || .@id == 5322 || .@id == 2709 || .@id == 2710 || .@id == 2712 || .@id == 2728 || .@id == 2729 || .@id == 2730 || .@id == 2731 || .@id == 2732 || .@id == 2716 || .@id == 2717 || .@id == 2718 || .@id == 2719 || .@id == 2720 || .@id == 2721 || .@id == 2722 || .@id == 2723 || .@id == 2724 || .@id == 2725 || .@id == 2726 || .@id == 2727 || .@id == 2714 || .@id == 5358 || .@id == 5361 || .@id == 5362 || .@id == 2737 || .@id == 5377 || .@id == 2742 ||				 .@id == 2751 || .@id == 2743 || .@id == 2744 || .@id == 2745 || .@id == 2746 || .@id == 2747 || .@id == 2748 || .@id == 2749 || .@id == 2765 || .@id == 2766 || .@id == 2767 || .@id == 2768 || .@id == 2769 || .@id == 2770 || .@id == 2771 || .@id == 2775 || .@id == 5462 || .@id == 5463 || .@id == 5444 || .@id == 5445 || .@id == 5446 || .@id == 2783 || .@id == 2784 || .@id == 2785 || .@id == 2786 || .@id == 10028 || .@id == 10029 || .@id == 10030 || .@id == 10031 || .@id == 10032 || .@id == 10033 || .@id == 10034 || .@id == 10035 || .@id == 10036 || .@id == 2787 || .@id == 2788 || .@id == 2789 || .@id == 2790 || .@id == 2791 || .@id == 2792 || .@id == 2793 || .@id == 5823 || .@id == 5820 || .@id == 5821 || .@id == 2794 || .@id == 2795 || .@id == 5521 || .@id == 2799 || .@id == 2800 || .@id == 2801 || .@id == 2802 || .@id == 2803 || .@id == 2804 || .@id == 2805 || .@id == 2806 || .@id == 2807 || .@id == 2798 || .@id == 5532 || .@id == 2815 || .@id == 5548 || .@id == 5574 || .@id == 5576 || .@id == 2828 || .@id == 5592 || .@id == 2830 || .@id == 2831 || .@id == 5594 || .@id == 5596 || .@id == 5597 || .@id == 5681 || .@id == 2845 || .@id == 2843 || .@id == 2844 || .@id == 2853 || .@id == 2854 || .@id == 2632 || .@id == 2633 )? "Accessory" :
					( .@id == 2206 || .@id == 2216 || .@id == 2217 || .@id == 2220 || .@id == 2221 || .@id == 2222 || .@id == 2223 || .@id == 2226 || .@id == 2227 || .@id == 2236 || .@id == 2244 || .@id == 2245 || .@id == 2247 || .@id == 2248 || .@id == 2251 || .@id == 2252 || .@id == 2277 || .@id == 2280 || .@id == 5003 || .@id == 5012 || .@id == 5016 || .@id == 5018 || .@id == 5019 || .@id == 2264 || .@id == 10006 || .@id == 10010 || .@id == 10012 || .@id == 10018 || .@id == 5058 || .@id == 5059 || .@id == 5060 || .@id == 5062 || .@id == 5065 || .@id == 5067 || .@id == 5069 || .@id == 5073 || .@id == 5075 || .@id == 5076 || .@id == 5078 || .@id == 5084 || .@id == 5092 || .@id == 5093 || .@id == 5097 || .@id == 5099 || .@id == 5103 || .@id == 5136 || .@id == 5105 || .@id == 5106 || .@id == 5108 || .@id == 5109 || .@id == 5111 || .@id == 5112 || .@id == 5114 || .@id == 5115 || .@id == 5116 || .@id == 5119 || .@id == 5120 || .@id == 5122 || .@id == 5123 || .@id == 5129 || .@id == 5132 || .@id == 5137 || .@id == 5138 || .@id == 5141 || .@id == 5144 || .@id == 5145 || .@id == 5146 || .@id == 5147 || .@id == 5150 || .@id == 5158 || .@id == 5167 || .@id == 5168 || .@id == 5170 || .@id == 5172 || .@id == 5173 || .@id == 5174 || .@id == 5188 || .@id == 5189 || .@id == 5190 || .@id == 5198 || .@id == 5200 || .@id == 5199 || .@id == 5201 || .@id == 5202 || .@id == 5208 || .@id == 5209 || .@id == 5214 || .@id == 5219 || .@id == 5222 || .@id == 5227 || .@id == 5228 || .@id == 5229 || .@id == 5230 || .@id == 5231 || .@id == 5232 || .@id == 5233 || .@id == 5234 || .@id == 5235 || .@id == 5236 || .@id == 5237 || .@id == 5252 || .@id == 5253 || .@id == 5254 || .@id == 5255 || .@id == 5258 || .@id == 5226 || .@id == 5259 || .@id == 5260 || .@id == 5263 || .@id == 5264 || .@id == 5243 || .@id == 5270 || .@id == 5273 || .@id == 5274 || .@id == 5275 || .@id == 5276 || .@id == 5802 || .@id == 5282 || .@id == 5283 || .@id == 5284 || .@id == 5287 || .@id == 5289 || .@id == 5290 || .@id == 5291 || .@id == 5293 || .@id == 5302 || .@id == 5304 || .@id == 5307 || .@id == 5308 || .@id == 5312 || .@id == 5316 || .@id == 5317 || .@id == 5318 || .@id == 5319 || .@id == 5323 || .@id == 5324 || .@id == 5330 || .@id == 5806 || .@id == 5333 || .@id == 5334 || .@id == 5335 || .@id == 5336 || .@id == 5337 || .@id == 5338 || .@id == 5339 || .@id == 5340 || .@id == 5341 || .@id == 5342 || .@id == 5343 || .@id == 5344 || .@id == 5345 || .@id == 5346 || .@id == 5353 || .@id == 5347 || .@id == 5348 || .@id == 5349 || .@id == 5352 || .@id == 5809 || .@id == 5354 || .@id == 5355 || .@id == 5356 || .@id == 5810 || .@id == 5359 || .@id == 5366 || .@id == 5368 || .@id == 5369 || .@id == 5371 || .@id == 5379 || .@id == 5380 || .@id == 5381 || .@id == 5383 || .@id == 5384 || .@id == 5372 || .@id == 5378 || .@id == 5386 || .@id == 5387 || .@id == 5388 || .@id == 5390 || .@id == 5392 || .@id == 5393 || .@id == 5812 || .@id == 5395 || .@id == 5405 || .@id == 5364 || .@id == 5365 || .@id == 5367 || .@id == 5406 || .@id == 5407 || .@id == 5408 || .@id == 5409 || .@id == 5410 || .@id == 5399 || .@id == 5413 || .@id == 5414 || .@id == 5415 || .@id == 5416 || .@id == 5417 || .@id == 5418 || .@id == 5422 || .@id == 5423 || .@id == 5424 || .@id == 5425 || .@id == 5426 || .@id == 5427 || .@id == 5428 || .@id == 5429 || .@id == 5430 || .@id == 5432 || .@id == 5433 || .@id == 5450 || .@id == 5456 || .@id == 5457 || .@id == 5458 || .@id == 5459 || .@id == 5478 || .@id == 5484 || .@id == 5813 || .@id == 5486 || .@id == 5487 || .@id == 5488 || .@id == 5437 || .@id == 5443 || .@id == 5447 || .@id == 5448 || .@id == 5449 || .@id == 5490 || .@id == 5435 || .@id == 5491 || .@id == 5494 || .@id == 5496 || .@id == 5497 || .@id == 5499 || .@id == 5500 || .@id == 5501 || .@id == 5502 || .@id == 5504 || .@id == 5505 || .@id == 5503 || .@id == 5815 || .@id == 5816 || .@id == 5818 || .@id == 5822 || .@id == 5506 || .@id == 5507 || .@id == 5508 || .@id == 5509 || .@id == 5510 || .@id == 5511 || .@id == 5519 || .@id == 5522 || .@id == 5523 || .@id == 5524 || .@id == 5525 || .@id == 5526 || .@id == 5527 || .@id == 5528 || .@id == 5824 || .@id == 5530 || .@id == 5531 || .@id == 5534 || .@id == 5535 || .@id == 5537 || .@id == 5538 || .@id == 5539 || .@id == 5544 || .@id == 5561 || .@id == 5562 || .@id == 5431 || .@id == 5826 || .@id == 5568 || .@id == 5572 || .@id == 5479 || .@id == 5480 || .@id == 5481 || .@id == 5575 || .@id == 5583 || .@id == 5586 || .@id == 5587 || .@id == 5827 || .@id == 5593 || .@id == 5601 || .@id == 5434 || .@id == 5466 || .@id == 5467 || .@id == 5468 || .@id == 5471 || .@id == 5465 || .@id == 5472 || .@id == 5473 || .@id == 5474 || .@id == 5476 || .@id == 5469 || .@id == 5563 || .@id == 5690 || .@id == 5739 || .@id == 5740 || .@id == 5744 || .@id == 5745 )? "Hat" :
					"Headgear" :
				( .@loc & 16 )?
					// Clothing, Else Armor
					( .@id == 2301 || .@id == 2302 || .@id == 2303 || .@id == 2304 || .@id == 2305 || .@id == 2306 || .@id == 2307 || .@id == 2308 || .@id == 2309 || .@id == 2310 || .@id == 2311 || .@id == 2318 || .@id == 2319 || .@id == 2320 || .@id == 2321 || .@id == 2322 || .@id == 2323 || .@id == 2324 || .@id == 2325 || .@id == 2326 || .@id == 2327 || .@id == 2330 || .@id == 2331 || .@id == 2332 || .@id == 2333 || .@id == 2334 || .@id == 2335 || .@id == 2336 || .@id == 2337 || .@id == 2338 || .@id == 2339 || .@id == 2361 || .@id == 2362 || .@id == 2363 || .@id == 2370 || .@id == 2371 || .@id == 2372 || .@id == 2373 || .@id == 2374 || .@id == 2397 || .@id == 15012 )? "Clothing" :
					"Armor" :
				( .@loc & 32 )?
					// Guard, Else Shield
					( .@id == 2110 || .@id == 2111 || .@id == 2136 )? "Guard" :
					"Shield" :
				( .@loc & 4 )? "Garment" :
				( .@loc & 64 )? "Shoes" :
				( .@loc & 136 )?
					// Ring, Else Accessory
					( .@id == 2631 || .@id == 2640 || .@id == 2677 || .@id == 2678 || .@id == 2679 || .@id == 2680 || .@id == 2681 || .@id == 2682 || .@id == 2683 || .@id == 2684 || .@id == 2685 || .@id == 2711 || .@id == 5828 )? "Ring" :
					"Accessory" :
				"Equipment - ERROR";
		}
		else if ( .@type == IT_WEAPON ) {
			@itemname2_info$[0] = "^999999";
			@itemname2_info$[2] = .@return$;
			.@view = getiteminfo( .@id, 11 );
			if ( .@view == 1 ) .@return$ = "Dagger";
			else if ( .@view == 2 ) .@return$ = "Sword";
			else if ( .@view == 3 ) .@return$ = "Two-handed Sword";
			else if ( .@view == 4 || .@view == 5 ) .@return$ = "Spear";
			else if ( .@view == 6 || .@view == 7 ) .@return$ = "Axe";
			else if ( .@view == 8 ) .@return$ = "Mace";
			else if ( .@view == 10 ) {
				if ( .@id == 2262 || .@id == 5204 ) .@return$ = "Staff";
				else .@return$ = "Rod";
			}
			else if ( .@view == 11 ) .@return$ = "Bow";
			else if ( .@view == 12 ) .@return$ = "Claw";
			else if ( .@view == 13 ) .@return$ = "Musical Instrument";
			else if ( .@view == 14 ) .@return$ = "Whip";
			else if ( .@view == 15 ) .@return$ = "Book";
			else if ( .@view == 16 ) .@return$ = "Katar";
			else if ( .@view == 17 ) .@return$ = "Revolver";
			else if ( .@view == 18 ) .@return$ = "Rifle";
			else if ( .@view == 19 ) .@return$ = "Gatling Gun";
			else if ( .@view == 20 ) .@return$ = "Shotgun";
			else if ( .@view == 21 ) .@return$ = "Grenade Launcher";
			else if ( .@view == 22 ) .@return$ = "Huuma Shuriken";
			else .@return$ = "Weapon - ERROR";
		}
	}
//	else if ( getarg(3) ) // broken equipment ... seems no longer show red
//		@itemname2_info$[0] = "^FF0000";

	if ( !getstrlen( @itemname2_info$[0] ) )
		@itemname2_info$[0] = "^000000";

	return .@return$;
}